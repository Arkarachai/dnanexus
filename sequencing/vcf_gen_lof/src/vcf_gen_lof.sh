#!/bin/bash
# vcf_annotate 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

set -x
set -o pipefail

main() {

    echo "Value of vcf_fn: '$vcf_fn'"
    echo "Value of prefix: '$prefix'"
    
    FN=$(dx describe --name "$vcf_fn")
    if test -z "$prefix"; then
    	prefix="$(echo "$FN" | sed 's/\.vcf\(\.gz\)*$//').LOF"
    fi

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

	# Download the necessary files for GATK SelectVariants
	sudo mkdir -p /usr/share/GATK/resources
	sudo chmod -R a+rwX /usr/share/GATK
			
	dx download "$DX_RESOURCES_ID:/GATK/jar/GenomeAnalysisTK-3.4-46.jar" -o /usr/share/GATK/GenomeAnalysisTK-3.4-46.jar
	dx download "$DX_RESOURCES_ID:/GATK/resources/human_g1k_v37_decoy.fasta" -o /usr/share/GATK/resources/human_g1k_v37_decoy.fasta
	dx download "$DX_RESOURCES_ID:/GATK/resources/human_g1k_v37_decoy.fasta.fai" -o /usr/share/GATK/resources/human_g1k_v37_decoy.fasta.fai
	dx download "$DX_RESOURCES_ID:/GATK/resources/human_g1k_v37_decoy.dict" -o /usr/share/GATK/resources/human_g1k_v37_decoy.dict

	WKDIR=$(mktemp -d)
	OUTDIR=$(mktemp -d)
	cd $WKDIR
	
	cat_cmd="cat"
	
	LOCALFN="vcf_input.vcf"
    dx download "$vcf_fn" -o $LOCALFN
	if test "$(echo "$FN" | grep '\.gz$')"; then
		cat_cmd="zcat"
		mv $LOCALFN $LOCALFN.gz
		LOCALFN="$LOCALFN.gz"
		tabix -p vcf $LOCALFN
	fi
	
    TOT_MEM=$(free -m | grep "Mem" | awk '{print $2}')
    # only ask for 90% of total system memory
    TOT_MEM=$((TOT_MEM * 9 / 10))
    
	# generate SNPEff annotation, 1 per variant, per line
    $cat_cmd $LOCALFN |  sed 's/\([^\t]\)*\t\([^\t]*\).*ANN=\([^;]*\)*.*/\1\t\2\t\3/' | awk -F '\t|,' '{for(i=3;i<=NF;i++){print $1 "\t" $2 "\t" $i}}' > snpeff_anno
    
    # Filter on that annotation
    GATK_ARGS=""
    
    touch $WKDIR/anno_pass.bed
    
    
    # generate SIFT annotation, 1 per variant, per line
    $cat_cmd $LOCALFN |  sed 's/\([^\t]\)*\t\([^\t]*\).*SIFT=\([^;]*\)*.*/\1\t\2\t\3/' | awk -F '\t|,' '{for(i=3;i<=NF;i++){print $1 "\t" $2 "\t" $i}}' > snpeff_anno
    
 	# And select the variants that pass the filter
	java -d64 -Xms512m -Xmx${TOT_MEM}m -jar /usr/share/GATK/GenomeAnalysisTK-3.4-46.jar \
	-T SelectVariants \
	-nt $(nproc --all) \
	-R /usr/share/GATK/resources/human_g1k_v37_decoy.fasta \
	-V $LOCALFN $GATK_ARGS -o $OUTDIR/$prefix.vcf.gz
	
    vcf_out=$(dx upload $OUTDIR/$prefix.vcf.gz --brief)
    vcfidx_out=$(dx upload $OUTDIR/$prefix.vcf.gz.tbi --brief)

    dx-jobutil-add-output vcf_out "$vcf_out" --class=file
    dx-jobutil-add-output vcfidx_out "$vcfidx_out" --class=file
}
